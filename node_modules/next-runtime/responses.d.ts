import { GetServerSidePropsResult } from './types/next';
export declare type ResponseInit = {
    status?: number;
    statusText?: string;
    headers?: Record<string, string>;
};
export declare type TypedResponse<P extends {
    [key: string]: any;
}> = {
    body: GetServerSidePropsResult<P>;
} & ResponseInit;
/**
 * Send the user a 404
 */
export declare function notFound(init?: number | ResponseInit): TypedResponse<never>;
/**
 * Redirect the user to another page. Defaults to temporary redirect.
 */
export declare function redirect(destination: string, init?: number | ResponseInit | {
    permanent: boolean;
}): TypedResponse<never>;
/**
 * Return the props used to render the page, or as api response
 */
export declare function json<TProps extends Record<string, unknown>>(props: TProps, init?: number | ResponseInit): TypedResponse<TProps>;
