"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useSafeState = void 0;
const react_1 = require("react");
/**
 * Sets state while avoiding the "set state while unmounted" warning,
 * can eventually be removed in react 18 (hopefully!)
 */
function useSafeState(initial) {
    const [state, setState] = (0, react_1.useState)(initial);
    const mounted = (0, react_1.useRef)(false);
    (0, react_1.useEffect)(() => {
        mounted.current = true;
        return () => {
            mounted.current = false;
        };
    }, []);
    const setStateIfMounted = (0, react_1.useCallback)((value) => {
        if (mounted.current)
            setState(value);
    }, []);
    return [state, setStateIfMounted];
}
exports.useSafeState = useSafeState;
//# sourceMappingURL=use-safe-state.js.map