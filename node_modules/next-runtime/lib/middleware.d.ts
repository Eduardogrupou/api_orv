import { MaybePromise, RuntimeContext } from '../handle';
import { TypedResponse } from '../responses';
import { ParsedUrlQuery } from '../types/querystring';
declare type NextFn = () => void | Promise<void>;
export declare type MiddlewareFn<T extends ParsedUrlQuery = ParsedUrlQuery> = (context: RuntimeContext<T>, next: NextFn) => MaybePromise<TypedResponse<any> | void>;
export declare function applyMiddlewares<T>(middlewares: MiddlewareFn<any>[] | undefined, handler: T): T;
export {};
